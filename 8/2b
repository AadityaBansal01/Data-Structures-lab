#include <iostream>
using namespace std;

// BST Node
struct Node {
    int data;
    Node* left;
    Node* right;

    Node(int val) {
        data = val;
        left = right = nullptr;
    }
};

// Function to find maximum in BST
int findMax(Node* root) {
    if (root == nullptr) {
        cout << "BST is empty!" << endl;
        return -1; // or throw an error
    }
    Node* current = root;
    while (current->right != nullptr) { // go to the rightmost node
        current = current->right;
    }
    return current->data;
}

int main() {
    // Manually create BST:
    //       50
    //      /  \
    //     30   70
    //    / \   / \
    //   20 40 60 80
    Node* root = new Node(50);
    root->left = new Node(30);
    root->right = new Node(70);
    root->left->left = new Node(20);
    root->left->right = new Node(40);
    root->right->left = new Node(60);
    root->right->right = new Node(80);

    cout << "Maximum element in BST: " << findMax(root) << endl;

    return 0;
}
